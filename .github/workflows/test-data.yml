name: test-data

on:
  pull_request:
    paths:
      - "tools/get_test_data.sh"
      - "tests/**"
      - "config/emseq-conda-env.yaml"
      - ".github/workflows/test-data.yml"
  schedule:
    - cron: "0 4 * * 1"
  workflow_dispatch: {}

concurrency:
  group: test-data-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4

      # Bootstrap conda/mamba
      - name: Setup Conda (Miniforge)
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Miniforge3
          auto-activate-base: false
          use-mamba: true

      # Prove the file is present (fail fast if path is wrong)
      - name: Verify env file
        shell: bash -l {0}
        run: |
          set -euo pipefail
          ls -lah config
          test -f config/emseq-conda-env.yaml
          sed -n '1,20p' config/emseq-conda-env.yaml

      # Create OR update the env so reruns don't fail if it already exists
      - name: Create/Update env from YAML
        shell: bash -l {0}
        run: |
          set -euo pipefail
          # If env exists, update; else create
          if conda env list | awk '{print $1}' | grep -qx emseq; then
            mamba env update -n emseq -f config/emseq-conda-env.yaml
          else
            mamba env create  -n emseq -f config/emseq-conda-env.yaml
          fi
          conda env list
          conda run -n emseq samtools --version || true

      - name: Make script executable
        run: chmod +x tools/get_test_data.sh

      - name: Execute script (inside env)
        shell: bash -l {0}
        run: conda run -n emseq ./tools/get_test_data.sh

      - name: Sanity checks
        shell: bash -l {0}
        run: |
          set -euo pipefail
          test -d tests/full || (echo "tests/full not created" >&2; exit 1)
          fq_count=$(find tests/full -type f -name "*fastq.gz" | wc -l)
          (( fq_count >= 4 )) || { echo "Expected ≥4 FASTQs, got ${fq_count}"; exit 1; }
          fasta_count=$(find tests/full -type f \( -name "*chr22*.fa*" -o -name "*lambda*.fa*" -o -name "*pUC19*.fa*" \) | wc -l)
          (( fasta_count >= 1 )) || { echo "Expected ≥1 reference FASTA"; exit 1; }
          echo "OK: test data present."
